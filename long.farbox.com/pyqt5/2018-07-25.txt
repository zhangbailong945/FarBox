---
date: 2018-07-25 21:51
status: public
title: 2018-07-25PyQt5控件8-QSlider
---

## 定义
* QSlider(滑动条）提供了一个垂直或水平的滑动条，滑动条是一个用于控制有界面值的典型控件，它允许用户沿水平或者垂直方向在某一范围内移动滑块，并将滑块所在的位置转换成一个合法范围内的整数值。有时候这种方式比输入数字或使用SpinBox更加自然。在槽函数中对滑块所在位置的处理相当于从整数之间的最小值和最高值进行取值。
* 一个滑块条控件可以以水平或垂直的方式显示，在构造函数中进行设置。
```ptyon
self.sp=QSlider(Qt.Horizontal)
self.sp=QSlider(Qt.Vertical)
```

## 继承关系
QSlider《QAbstractSlider《QWidget《QObject/QPaintDevice

## 函数
方法 | 描述
------|--------
setMinimum() | 设置滑动条控件的最小值
setMaximum(）|设置滑动条空间的最大值
setSingleStep() | 设置滚动条控件的递增/递减的步长值
setValue() | 设置滚动条控件的值
value() | 获取滚动条控件的值
setTickInterval() | 设置刻度间隔
setTickPosition() | 设置刻度标记的位置，可以输入一个枚举值，这个枚举值指定刻度线相对于滑块和用户操作的位置。QSlider.NoTicks ，不会绘制任何刻度线QSlider.TicksBothSides,在滑块的两侧绘制刻度线QSlider.TicksAbove,在水平滑块上方绘制刻度线QSlider.TicksBelow,在水平滑块下方绘制刻度线QSlider.TicksLeft,在垂直滑块左侧绘制刻度线QSlider.TicksRight,在垂直滑块右侧绘制刻度线


## 信号
信号|描述
-----|------
valueChanged | 当滑块的值发生改变时发射此信号，次信号是醉常用的。
sliderPressed | 当用户按下滑块时发射此信号
sliderMoved| 当用户拖动滑块时发射此信号
sliderReleased| 当用户释放滑块时发射此信号

## 代码
```python
import sys
from PyQt5.QtWidgets import QApplication,QWidget,QVBoxLayout,QSlider,QLabel
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QFont

class SliderDemo(QWidget):
    def __init__(self,parent=None):
        super(SliderDemo,self).__init__(parent)
        self.setWindowTitle("Slider 滑动条")
        self.resize(300,100)

        layout=QVBoxLayout()
        self.lb1=QLabel("Hello PyQt5")
        self.lb1.setAlignment(Qt.AlignCenter)
        layout.addWidget(self.lb1)

        self.sli1=QSlider(Qt.Horizontal)
        self.sli1.setMinimum(1)
        self.sli1.setMaximum(100)
        self.sli1.setSingleStep(2)
        self.sli1.setValue(20)
        self.sli1.setTickPosition(QSlider.TicksBelow)
        self.sli1.setTickInterval(5)
        layout.addWidget(self.sli1)

        self.sli1.valueChanged.connect(self.valueChange)
        self.setLayout(layout)
    

    def valueChange(self):
        self.lb1.setText("value %s"% self.sli1.value())
        size=self.sli1.value()
        self.lb1.setFont(QFont("Arial",size))


if __name__=='__main__':
    app=QApplication(sys.argv)
    sliderDemo=SliderDemo()
    sliderDemo.show()
    sys.exit(app.exec_())


```
