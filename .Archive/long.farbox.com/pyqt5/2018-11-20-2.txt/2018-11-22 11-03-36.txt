---
date: 2018-11-21 15:49
status: public
title: 2018-11-20PyQt5界面显示与页面逻辑的分离
---

## Qt Designer
    Qt Designer可以更好第实现界面与业务逻辑的分离，可能节省我们大量代码的间。并且可以自动生成信号与槽函数。

## 界面
```python
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\Codes\PyQt5Projects\MainWinSignalSlot.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(400, 300)
        self.horizontalLayout = QtWidgets.QHBoxLayout(Form)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setSpacing(1)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.controlsGroup = QtWidgets.QGroupBox(Form)
        self.controlsGroup.setObjectName("controlsGroup")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.controlsGroup)
        self.verticalLayout.setObjectName("verticalLayout")
        self.hlayout = QtWidgets.QHBoxLayout()
        self.hlayout.setObjectName("hlayout")
        self.label = QtWidgets.QLabel(self.controlsGroup)
        self.label.setObjectName("label")
        self.hlayout.addWidget(self.label)
        self.spinBoxNumber = QtWidgets.QSpinBox(self.controlsGroup)
        self.spinBoxNumber.setObjectName("spinBoxNumber")
        self.hlayout.addWidget(self.spinBoxNumber)
        self.label_2 = QtWidgets.QLabel(self.controlsGroup)
        self.label_2.setObjectName("label_2")
        self.hlayout.addWidget(self.label_2)
        self.comboBoxType = QtWidgets.QComboBox(self.controlsGroup)
        self.comboBoxType.setObjectName("comboBoxType")
        self.comboBoxType.addItem("")
        self.comboBoxType.addItem("")
        self.comboBoxType.addItem("")
        self.comboBoxType.addItem("")
        self.hlayout.addWidget(self.comboBoxType)
        self.btnPrint = QtWidgets.QPushButton(self.controlsGroup)
        self.btnPrint.setObjectName("btnPrint")
        self.hlayout.addWidget(self.btnPrint)
        self.verticalLayout.addLayout(self.hlayout)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setContentsMargins(0, -1, -1, -1)
        self.horizontalLayout_3.setSpacing(1)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.checkBoxPreview = QtWidgets.QCheckBox(self.controlsGroup)
        self.checkBoxPreview.setObjectName("checkBoxPreview")
        self.horizontalLayout_3.addWidget(self.checkBoxPreview)
        self.btnPreview = QtWidgets.QPushButton(self.controlsGroup)
        self.btnPreview.setObjectName("btnPreview")
        self.horizontalLayout_3.addWidget(self.btnPreview)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_2.addWidget(self.controlsGroup)
        self.resultGroup = QtWidgets.QGroupBox(Form)
        self.resultGroup.setObjectName("resultGroup")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.resultGroup)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.labelResult = QtWidgets.QLabel(self.resultGroup)
        self.labelResult.setText("")
        self.labelResult.setObjectName("labelResult")
        self.verticalLayout_2.addWidget(self.labelResult)
        self.horizontalLayout_2.addWidget(self.resultGroup)
        self.horizontalLayout.addLayout(self.horizontalLayout_2)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.controlsGroup.setTitle(_translate("Form", "打印控制"))
        self.label.setText(_translate("Form", "打印份数："))
        self.label_2.setText(_translate("Form", "纸张类型："))
        self.comboBoxType.setItemText(0, _translate("Form", "A4"))
        self.comboBoxType.setItemText(1, _translate("Form", "A5"))
        self.comboBoxType.setItemText(2, _translate("Form", "明信片"))
        self.comboBoxType.setItemText(3, _translate("Form", "手信纸"))
        self.btnPrint.setText(_translate("Form", "打印"))
        self.checkBoxPreview.setText(_translate("Form", "全屏预览"))
        self.btnPreview.setText(_translate("Form", "预览"))
        self.resultGroup.setTitle(_translate("Form", "操作结果"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())

```

## 逻辑
```python
import sys
from PyQt5.QtWidgets import QApplication, QWidget
from Ui_MainWinSignalSlot import Ui_Form
from PyQt5.QtCore import pyqtSignal, Qt

class MyWidget(QWidget, Ui_Form):
    #声明信号
    helpSignal=pyqtSignal(str)
    printSignal=pyqtSignal(list)
    previewSignal=pyqtSignal([int, str], [str])
    
    def __init__(self,parent=None):
        super(MyWidget, self).__init__(parent)
        self.setupUi(self)
        self.initUI()
    
    def initUI(self):
        #连接信号与槽函数
        self.helpSignal.connect(self.showHelpMessage)
        self.printSignal.connect(self.printPaper)
        self.previewSignal[str].connect(self.previewPaper)
        self.previewSignal[int, str].connect(self.previewPaperWithArgs)
        self.btnPrint.clicked.connect(self.emitPrintSignal)
        self.btnPreview.clicked.connect(self.emitPreviewSignal)
    
    #发射预览信号
    def emitPreviewSignal(self):
        if self.checkBoxPreview.isChecked()==True:
            self.previewSignal[int, str].emit(1080, "Full Screen")
        elif self.checkBoxPreview.isChecked()==False:
            self.previewSignal[str].emit("Preview")
    
    #发送打印信号
    def emitPrintSignal(self):
        pList=[]
        pList.append(self.spinBoxNumber.value())
        pList.append(self.comboBoxType.currentText())
        self.printSignal.emit(pList)
    
    def printPaper(self,list):
        self.labelResult.setText("打印："+"份数："+str(list[0])+"纸张:"+str(list[1]))
    
    def previewPaperWithArgs(self,style,text):
        self.labelResult.setText(str(style)+text)
    
    def previewPaper(self,text):
        self.labelResult.setText(text)
    

    #重载按键事件
    def keyPressEvent(self,event):
        if event.key()==Qt.Key_F1:
            self.helpSignal.emit("help message")
    
    #显示帮助信息
    def showHelpMessage(self,message):
        self.labelResult.setText(message)
    


if __name__=='__main__':
    app=QApplication(sys.argv)
    demo=MyWidget()
    demo.show()
    sys.exit(app.exec_())
        

```