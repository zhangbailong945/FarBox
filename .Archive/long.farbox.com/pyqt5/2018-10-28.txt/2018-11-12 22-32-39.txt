---
date: 2018-10-28 14:07
status: public
title: 2018-10-28PyQt5高级控件6QTreeView
---

## 定义
    QTreeWidget实现了树形结果。

## 继承关系
QTreeWidget《QTreeView《QAbstractItemView《QAbstractScrollArea《QFrame《QWidget《QObject/QPaintDevice

## QTreeWidget的方法
方法 | 描述
------|-------
setColumnWidth(int column,int width) | 指定列的宽度设置为给定的值
insertTopLevelItems() | 在视图的顶层索引中输入项目列表
expandAll() | 展开所有的树形节点
invisibleRootItem() | 返回树形控件中不可见的根选项（Root Item）
selectedItems() |  返回所有选定的非隐藏的列表

## QTreeWidgetItem 的方法
方法 | 描述
------|-------
addChild() | 将子项追加到子列表中
setText() | 设置显示的节点文本
Text() | 返回显示的节点文本
setCheckState(column,state) | 设置指定列的选中状态，Qt.Checked，选中；Qt.Unchecked，节点未选中。
setIcon(column,icon) | 在指定列中显示图标

## 代码
```python
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QApplication,QWidget,QTreeWidget,QTreeWidgetItem,QHBoxLayout,QVBoxLayout,QFormLayout
from PyQt5.QtGui import QIcon
import sys


class TreeWidgetDemo(QWidget):

    def __init__(self,parent=None):
        super(TreeWidgetDemo,self).__init__(parent)
        self.initUI()
    
    def initUI(self):
        layout=QVBoxLayout()
        self.tree=QTreeWidget()
        #设置列数
        self.tree.setColumnCount(2)
        #设置树形控件头部图标
        self.tree.setHeaderLabels(['key','value'])
        #设置根节点
        root=QTreeWidgetItem(self.tree)
        root.setText(0,'root')
        root.setIcon(0,QIcon("./images/32x32.ico"))
        #设置树形控件的列的宽度
        self.tree.setColumnWidth(0,160)

        #设置子节点
        child1=QTreeWidgetItem(root)
        child1.setText(0,'child1')
        child1.setText(1,'ios')
        root.setIcon(0,QIcon("./images/32x32.ico"))

        #设置子节点
        child2=QTreeWidgetItem(root)
        child2.setText(0,'child2')
        child2.setText(1,'')
        root.setIcon(0,QIcon("./images/32x32.ico"))

        #设置子节点
        child3=QTreeWidgetItem(child2)
        child3.setText(0,'child2')
        child3.setText(1,'')
        root.setIcon(0,QIcon("./images/32x32.ico"))

        self.tree.addTopLevelItem(root)
        #全部展开
        self.tree.expandAll()
        layout.addWidget(self.tree)
        self.setLayout(layout)



if __name__=="__main__":
    app=QApplication(sys.argv)
    demo=TreeWidgetDemo()
    demo.show()
    sys.exit(app.exec_())
```