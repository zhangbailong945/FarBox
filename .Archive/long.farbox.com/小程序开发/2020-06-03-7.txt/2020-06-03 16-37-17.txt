---
date: 2020-06-03 16:25
status: public
title: 2020-06-03-7 事件系统
---

一、事件系统
    事件是视图层到逻辑层的通讯方式
    事件可以将用户的行为反馈到逻辑层进行处理。
    事件可以绑定在组件上，当达到触发事件，就会执行逻辑层中对应事件处理函数。
    事件对象可以携带额外信息，如id,dataset,touches.

二、事件的使用方式
    在组件中绑定一个事件处理函数。
    如bindtap,当用户点击该组件的时候回在该页面的Page中找到相应的处理函数。
 
```
<view id="tapTest" data-hi="WeChat" bindtap="tapName">Clik me!</view>
```

```
Page({
    tapName:function(event){
        console.log(event)    
    }
})
```

三、使用WXS函数响应事件
    WXS函数接受2个参数，第一个是event，在原有的event的基础上加了event.instance对象，第二个参数是owerInstance,和event.instance一样是一个ComponentDescriptor对象。

* 在组件中绑定和注册事件处理的WXS函数。
```
<wxs module="wxs" src="./test.wxs"></wxs>
<view id="tapTest" data-hi="WeChat" bindtap="{{wxs.tapName}}">Clik me!</view>
```

* test.wxs文件实现tapName函数
function tapName(event,owerInstance){
    console.log('tap wechat',JSON.stringify(event))
}

module.exports={
    tapName:tapName
}


四、事件分类
    1.冒泡事件：当一个组件上的事件触发后，该事件会向父节点传递。
    2.非冒泡事件：当一个组件上的事件被触发后，该事件不会向父节点传递。

* WXML的冒泡事件列表:

    