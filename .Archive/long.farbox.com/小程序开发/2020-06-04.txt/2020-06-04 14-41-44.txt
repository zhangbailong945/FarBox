---
date: 2020-06-04 14:25
status: public
title: '2020-06-04 简易双向绑定'
---

一、双向绑定语法
    在WXML中，普通的属性的绑定是单向的。
    
```
<input value="{{value}}"/>
```

* 如果使用this.setData({value:'leaf'})来更新value,this.data.value和输入框显示的值被会更新为leaf；但如果用户修改了输入框的值，却不会同时改变this.data.value。
* 如果需要用户在输入的同时改变this.data.value,则需要借助简易双向绑定机制。此时，可以在对于项目之前加入model:前缀。

```
<input model:value="{{value}}"/>
```

二、在自定义组件中传递双向绑定
```
//custom-component.js
Component({
    properties:{
        myValue:String    
    }
})
```
```
//custom-component.wxml
<input model:value="{{myValue}}"/>
```
    这个自定义组件将自身myValue属性双向绑定到了组件内输入框value属性上。这样，如果页面这样使用这个组件：
```
<custom-component model:my-value="{{pageValue}}" />
```
    当输入框的值变更时，自定义组件的myValue属性同时变更，这样，页面的this.data.pageValue也会同时变更，页面WXML中所绑定了pageValue的位置也会被一同更新。
    
三、在自定义组件中触发双向绑定更新
    自定义组件还可以自己触发双向绑定更新，做法就是：使用setData设置自身的属性。
    
```
//custom-component.js
Component({
    properties:{
        myValue:String
},
methods:{
    update:function(){
      //更新
      this.setData({
        myValue:'leaf'      
      })    
    }
}
})
```
    如果页面这样使用这个组件：
```
<custom-component model:my-value="{{pageV}}"
```

