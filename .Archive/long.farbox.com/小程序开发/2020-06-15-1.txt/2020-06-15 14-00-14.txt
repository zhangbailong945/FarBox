---
date: 2020-06-15 13:27
status: public
title: '2020-06-15-1 behavior'
---

一、behavior
    behavior是用于组件间代码共享的特性，类似于一些编程语言中的"mixins"或"traits"。
    每个behavior可以包含一组属性、数据、生命周期函数和方法。组件引用它时，它的属性、数据和方法会被合并到组件中，生命周期函数也会在对于时机被调用。组件可以引用多个behavior，behavior也可以引用其他的behavior。

二、组件中使用
    组件引用时，在behavior定义段中将他们逐个列出即可。
```
var myBehavior=requie('my-behavior')
Component({
    behavior:[myBeahvior],
    properties:{
        myProperty:{
            type:String        
        }    
    },
    data:{
            myData:'my-component-data'    
    },
    created:function(){
        console.log('[my-component] created')    
    },
    attached:function(){
        console.log('my-component ready')    
    },
    methods:{
            myMethod:function(){
                console.log('[my-component] log by myMethod')            
            }   
    },
})
```
在上例中，my-component组件定义中加入了my-behavior。
my-behavior结构如下：
* 属性：myBehaviorProperty
* 数据字段：myBehaviorData
* 方法：myBehaviorMethod
* 生命周期函数：attached,created,ready

这将是my-component最终结构为：
* 属性：myBehaviorProperty、myProperty
* 数据字段：myBehaviorData、myData
* 方法：myBehaviorMethod、myMethod
* 生命周期函数：attached、created、ready

当组件触发生命周期时，上例生命手气函数执行的顺序为：
1.[my-behavior] created
2.[my-component] created
3.[my-behavior] attached
4.[my-component] attached
5.[my-behavior] ready
6.[my-component] ready

三、同名字段的覆盖和组合规则
    组件和它引用的behavior中可以包含同名的字段、对这些字段的处理方法如下：
* 如果有同名的属性(properties)或方法(methods):
    1.若组件本身有这个属性或方法，则组件的属性或方法会覆盖behavior中的同名属性或方法
    2.若组件本身无这个属性或方法、则组件的behavior字段中定义靠后的behavior的属性或方法覆盖
