---
date: 2020-06-04 16:10
status: public
title: '2020-06-04-4 自定义组件-组件模板和样式'
---

一、组件模块和样式
    类似于页面，自定义组件拥有自己的wxml模板和wxss样式
    
二、组件模板
    组件模板的写法于页面模板相同。组件模板与组件数据结合后生成的节点树，将被插入到组件的引用位置上。
    在组件模板中可以提供一个<slot>节点，用于承载组件引用时提供的子节点。

```
//组件模板
<view calss="wrapper">
    <view>这里是组件的内部节点</view>
    <slot></slot>
</view>
```

```
//引用组件模板
<view>
    <component-tag-name>
        <view>这里是插入的组件slot中的内容</view>
    </component-tag-name>
</view>
```
    注意，在模板引用的自定义组件及其对应的节点名需要在json文件中显式定义，否则会被当做一个无意义的节点。除此之外，节点名也可以被生命为抽象节点。

三、模板数据绑定
    与普通的WXML模板类似，可以使用数据绑定，这样就可以向子组件的属性传递动态数据。
```
<view>
    <component-tag-name prop-a="{{dataFieldA}}" prop-b="{{dataFieldB}}">
    <view>这里插入到组件slot中的内容</view>
    </component-tag-name>
</view>
```
    在以上例子中，组件的属性propA和propB将受到页面传递的数据。页面可以通过setData来改变绑定的数据字段。

四、组件WXML的slot
    在组件的wxml中可以包含slot节点，用于承载组件使用者提供的wxml结构。
    默认情况下，一个组件的wxml中只能有一个slot.需要使用多个slot，可以在组件js中声明启用。
```
Component({
    options:{
        multipleSlots:true    
    },
    properties:{},
    methods:{}
})
```    
    此时，可以在这个组件的wxml中使用多个slot，以不同的name区分。
```
<view>
    <slot name="before"></slot>
    <view><这里是组件内部细节</view>
    <slot name="after"></slot>
</view>
```
    使用时，用slot属性来将节点插入到不同的slot上。
```
<view>
    <component-tag-name>
        <view slot="before">这里是插入到slot before中的内容</view>
        <view slot="after">这里是插入到slot after中的内容</view>
    </compoent-tag-name>
</view>
```

五、组件样式
    组件对于wxss文件的样式，只对组件wxml内的节点生效。编写组件样式时，需要注意一下几点：
    1.组件和引用组件的页面不能使用ID选择器(#a)、属性选择器([a])和标签吗选择器,请改用class选择器。
    2.组件和引用组件的页面中使用后代选择器(.a,.b)在一些极端情况会有非预期的表现。
    3.子元素选择器(.a>.b)只能用于view组件与其子节点之间，用于其他组件可能导致非预期的情况。
    4.继承样式，如font,color，会从组件外继承到组件内
    5.c