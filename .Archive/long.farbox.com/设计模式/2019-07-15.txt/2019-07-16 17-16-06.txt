---
date: 2019-07-15 16:10
status: public
title: 2019-07-15工厂模式
---

## 用途
    定义一个用于创建对象的接口，让子类决定实例化哪一个类。Factory Method使一个类的实例化延迟到其子类。

## 定义
* 当一个类不知道它所必须创建的对象的类的时候。
* 当一个类希望由它的子类来指定他所创建的对象的时候。
* 当类创建对象的职责委托多个帮助子类中的某一个，并且希望将哪一个帮助子类是代理者这一信息局部化的时候。

## 代码
    假设我开了一家汽车制造厂，我有吉利和奇瑞的产品模具。每次生成什么牌子就去找那个牌子的模具。每次要更换很麻烦，我提供一个方法，每次生产啥牌子的汽车会自动拿那个牌子的模具。
```python
class CheryCar:
    '''
    奇瑞模具
    '''

    def __init__(self):
        self.car_name='奇瑞'
    
    def create(self):
        print('生产'+self.car_name)

class GeelyCar():
    '''
    吉利模具
    '''

    def __init__(self):
        self.car_name='吉利'
    
    def create(self):
        print('生产'+self.car_name)


class CarFactory:
    '''
    造车工厂 \n
    工程模式接口函数 \n
    @param ctype 车模具
    '''
    @staticmethod
    def createCar(ctype):
        if ctype=='Chery':
            return CheryCar()
        elif ctype=='Geely':
            return GeelyCar()
        else:
            return '没有该车的模具'


if __name__ == "__main__":
    #生产奇瑞
    car1=CarFactory.createCar('Chery')
    car1.create()
    #生产吉利
    car2=CarFactory.createCar('Geely')
    car2.create()
```